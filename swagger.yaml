swagger: '2.0'
info:
  title: University Recommendation API
  version: '0.0'
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/web-api-skeleton
host: localhost
schemes:
  - http
basePath: /api/v0
consumes:
  - text/plain
produces:
  - application/json
paths:
  /recommendations/{stu_type}/{stu_src}/batch-{batch}/ranking:
    get:
      tags:
        - recommendations
      description: 'Get a list of recommendations'
      operationId: getRecommendationsByRanking
      produces:
        - application/json
      parameters:
        - name: stu_type
          in: path
          description: "Type of student, arts/sciences"
          required: true
          type: string
        - name: stu_src
          in: path
          description: "Province that the student took the College Entrance Examination"
          required: true
          type: string
        - name: batch
          in: path
          description: "Batch that the student belongs to"
          required: true
          type: string
        - in: query
          name: page[size]
          description: "Number of results to return. Used in pagination. Default value is 10."
          required: false
          type: string
        - in: query
          name: page[number]
          description: "Page number of results. Used to paginate through results."
          required: false
          type: string
        - in: query
          name: rank_base
          description: "Ranking of the score"
          required: true
          type: integer
          format: int32
        - in: query
          name: rank_range
          description: "Positive integer indicates the range. real range will be (rank_base - rank_range, rank_base + rank_range)"
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/recommendation"
        "404":
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/descriptions/Error"

  /recommendations/{stu_type}/{stu_src}/batch-{batch}/ranking/majors:
    get:
      tags:
        - recommendations
      description: 'Get a list of recommendations'
      operationId: getRecommendationsByRankingAndMajor
      produces:
        - application/json
      parameters:
        - name: stu_type
          in: path
          description: "Type of student, arts/sciences"
          required: true
          type: string
        - name: stu_src
          in: path
          description: "Province that the student took the College Entrance Examination"
          required: true
          type: string
        - name: batch
          in: path
          description: "Batch that the student belongs to"
          required: true
          type: string
        - in: query
          name: page[size]
          description: "Number of results to return. Used in pagination. Default value is 10."
          required: false
          type: string
        - in: query
          name: page[number]
          description: "Page number of results. Used to paginate through results."
          required: false
          type: string
        - in: query
          name: rank_base
          description: "Ranking of the score"
          required: true
          type: integer
          format: int32
        - in: query
          name: rank_range
          description: "Positive integer indicates the range. real range will be (rank_base - rank_range, rank_base + rank_range)"
          required: true
          type: integer
          format: int32
        - in: query
          name: majors
          description: 'A list of key words used to filter the majors'
          required: true
          type: array
          item: string
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/recommendation"
        "404":
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/descriptions/Error"

  /recommendations/{stu_type}/{stu_src}/batch-{batch}/score:
    get:
      tags:
        - recommendations
      description: 'Get a list of recommendations'
      operationId: getRecommendationsByScore
      produces:
        - application/json
      parameters:
        - name: stu_type
          in: path
          description: "Type of student, arts/sciences"
          required: true
          type: string
        - name: stu_src
          in: path
          description: "Province that the student took the College Entrance Examination"
          required: true
          type: string
        - name: batch
          in: path
          description: "Batch that the student belongs to"
          required: true
          type: string
        - in: query
          name: page[size]
          description: "Number of results to return. Used in pagination. Default value is 10."
          required: false
          type: string
        - in: query
          name: page[number]
          description: "Page number of results. Used to paginate through results."
          required: false
          type: string
        - in: query
          name: score_diff
          description: "The differences between student's score and the batch score"
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/recommendation"
        "404":
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/descriptions/Error"

  /recommendations/{stu_type}/{stu_src}/batch-{batch}/score-diff/major:
    get:
      tags:
        - recommendations
      description: 'Get a list of recommendations'
      operationId: getRecommendationsByScore
      produces:
        - application/json
      parameters:
        - name: stu_type
          in: path
          description: "Type of student, arts/sciences"
          required: true
          type: string
        - name: stu_src
          in: path
          description: "Province that the student took the College Entrance Examination"
          required: true
          type: string
        - name: batch
          in: path
          description: "Batch that the student belongs to"
          required: true
          type: string
        - in: query
          name: page[size]
          description: "Number of results to return. Used in pagination. Default value is 10."
          required: false
          type: string
        - in: query
          name: page[number]
          description: "Page number of results. Used to paginate through results."
          required: false
          type: string
        - in: query
          name: score_diff
          description: "The differences between student's score and the batch score"
          required: true
          type: integer
          format: int32
        - in: query
          name: majors
          description: 'A list of key words used to filter the majors'
          required: true
          type: array
          item: string
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/recommendation"
        "404":
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/descriptions/Error"

  /admin/batch-score:
  /admin/enrollment-university:
  /admin/enrollment-major:
  /admin/ranking:

definitions:
  Recommendation:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique identifier for the recommendation
      university:
        $ref: "#/definitions/University"
      major:
        type: string
      year:
        type: integer
        format: int32
      stu_count:
        type: integer
        format: int32
        description: Number of students enrolled in the university
      score_avg:
        type: integer
        format: int32
        description: Average score for the university
      rank:
        type: integer
        format: int32
        description: Ranking of the score in the province
      score_batch:
        type: integer
        format: int32
        description: Score of the batch
      score_diff:
        type: integer
        format: int32
        description: Differences between score_avg and score_batch

  Archive:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique identifier for the archive
      year:
        type: integer
        format: int32
      stu_src:
        type: string
        description: Province that the students come from
      stu_type:
        type: string
        description: Type of the student-[arts, sciences]
      batch:
        type: integer
        format: int32
        description: An integer indicates the batch-[1, 2, 3]

  University:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique 4-digit identifier for the university
      name:
        type: string
        description: Name of the university
      province:
        type: string
        description: Province where the university locates
      is_985:
        type: boolean
        description: is the university in the 985 program
      is_211:
        type: boolean
        description: is the university in the 211 program

  Ranking:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique identifier for the ranking
      a_id:
        type: integer
        format: int32
        description: Identifier that related to the archive
      score:
        type: integer
        format: int32
        description: Score of the examination
      stu_count:
        type: integer
        format: int32
        description: Number of students received the score
      rank:
        type: integer
        format: int32
        description: Ranking of the score in the province

  BatchScore:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique identifier for the batchScore
      a_id:
        type: integer
        format: int32
        description: Identifier that related to the archive
      min_score:
        type: integer
        format: int32
        description: Minimum score of the batch

  EnrollmentUniversity:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique identifier for the EnrollmentUniversity
      u_id:
        type: integer
        format: int32
        description: Identifier that related to the university
      a_id:
        type: integer
        format: int32
        description: Identifier that related to the archive
      score_avg:
        type: integer
        format: int32
        description: Average score for the university
      stu_count:
        type: integer
        format: int32
        description: Number of students enrolled in the university

  EnrollmentMajor:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique identifier for the EnrollmentMajor
      u_id:
        type: integer
        format: int32
        description: Identifier that related to the university
      a_id:
        type: integer
        format: int32
        description: Identifier that related to the archive
      major:
        type: string
      score_avg:
        type: integer
        format: int32
        description: Average score for the major

  Translation:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique identifier for the Translation
      english:
        type: string
      chinese:
        type: string

  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
      developerMessage:
        type: string
      userMesage:
        type: string
      code:
        type: integer
      details:
        type: string
